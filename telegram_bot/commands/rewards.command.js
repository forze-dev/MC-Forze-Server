const rewardsCommand = async (ctx) => {
	try {
		// –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
		const loadingMessage = await ctx.reply('‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω—å...');

		// –û—Ç—Ä–∏–º—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º–∏
		const statsResponse = await fetch(`${process.env.API_URL}/rewards/stats`);

		if (!statsResponse.ok) {
			throw new Error(`–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: ${statsResponse.status}`);
		}

		const statsData = await statsResponse.json();

		// –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–ø –≥—Ä–∞–≤—Ü—ñ–≤ –∑–∞ 24 –≥–æ–¥–∏–Ω–∏
		const top24hResponse = await fetch(`${process.env.API_URL}/rewards/top/24h`);
		let top24hData = null;

		if (top24hResponse.ok) {
			top24hData = await top24hResponse.json();
		}

		// –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–ø –≥—Ä–∞–≤—Ü—ñ–≤ –∑–∞ –≤–µ—Å—å —á–∞—Å
		const topAllTimeResponse = await fetch(`${process.env.API_URL}/rewards/top/all-time?limit=5`);
		let topAllTimeData = null;

		if (topAllTimeResponse.ok) {
			topAllTimeData = await topAllTimeResponse.json();
		}

		// –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
		let message = `üèÜ *–°–∏—Å—Ç–µ–º–∞ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω—å –∑–∞ –∞–∫—Ç–∏–≤–Ω–∏–π —á–∞—Å*\n\n`;

		// –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
		if (statsData.success) {
			const general = statsData.general_stats;
			const today = statsData.today_stats;

			message += `üìä *–ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n`;
			message += `‚Ä¢ –ì—Ä–∞–≤—Ü—ñ–≤ –∑ –Ω–∞–≥–æ—Ä–æ–¥–∞–º–∏: ${general.total_players_with_rewards}\n`;
			message += `‚Ä¢ –ó–∞–≥–∞–ª–æ–º –∞–∫—Ç–∏–≤–Ω–∏—Ö –≥–æ–¥–∏–Ω: ${general.total_active_hours_all}\n`;
			message += `‚Ä¢ –ó–∞–≥–∞–ª–æ–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ: ${general.total_coins_awarded_all} GFC\n`;
			message += `‚Ä¢ –°–µ—Ä–µ–¥–Ω—å–æ –≥–æ–¥–∏–Ω –Ω–∞ –≥—Ä–∞–≤—Ü—è: ${general.avg_active_hours_per_player}\n\n`;

			message += `üìÖ *–°—å–æ–≥–æ–¥–Ω—ñ:*\n`;
			message += `‚Ä¢ –ù–∞–≥–æ—Ä–æ–¥–∂–µ–Ω–æ –≥—Ä–∞–≤—Ü—ñ–≤: ${today.players_rewarded_today}\n`;
			message += `‚Ä¢ –ù–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ –∫–æ—ó–Ω—ñ–≤: ${today.total_coins_awarded_today} GFC\n\n`;
		}

		// –¢–æ–ø –∑–∞ 24 –≥–æ–¥–∏–Ω–∏
		if (top24hData && top24hData.success && top24hData.top_players.length > 0) {
			message += `üî• *–¢–æ–ø –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 24 –≥–æ–¥–∏–Ω–∏:*\n`;
			top24hData.top_players.slice(0, 5).forEach((player, index) => {
				const emoji = index === 0 ? 'ü•á' : index === 1 ? 'ü•à' : index === 2 ? 'ü•â' : 'üèÖ';
				message += `${emoji} ${player.rank}. \`${player.minecraft_nick}\` - ${player.active_hours_24h}–≥ (${player.coins_earned_24h} GFC)\n`;
			});
			message += `\n`;
		} else {
			message += `üî• *–ó–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 24 –≥–æ–¥–∏–Ω–∏:*\n`;
			message += `–ü–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤\n\n`;
		}

		// –¢–æ–ø –∑–∞ –≤–µ—Å—å —á–∞—Å
		if (topAllTimeData && topAllTimeData.success && topAllTimeData.top_players.length > 0) {
			message += `üëë *–¢–æ–ø –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞ –≤–µ—Å—å —á–∞—Å:*\n`;
			topAllTimeData.top_players.slice(0, 5).forEach((player, index) => {
				const emoji = index === 0 ? 'üëë' : index === 1 ? 'ü•à' : index === 2 ? 'ü•â' : 'üèÖ';
				message += `${emoji} ${player.rank}. \`${player.minecraft_nick}\` - ${player.total_active_hours}–≥ (${player.total_coins_awarded} GFC)\n`;
			});
			message += `\n`;
		}

		// –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
		message += `üí° *–Ø–∫ –ø—Ä–∞—Ü—é—î —Å–∏—Å—Ç–µ–º–∞:*\n`;
		message += `‚Ä¢ 1 —Ö–≤–∏–ª–∏–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—ó –≥—Ä–∏ = 1 GFC\n`;
		message += `‚Ä¢ AFK —á–∞—Å –Ω–µ –≤—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è\n`;
		message += `‚Ä¢ –ù–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è —â–æ–¥–Ω—è, –≥—Ä–∞–π –∞–∫—Ç–∏–≤–Ω—ñ—à–µ\n`;
		message += `‚Ä¢ –ì—Ä–∞–π –∞–∫—Ç–∏–≤–Ω–æ —â–æ–± –ø–æ—Ç—Ä–∞–ø–∏—Ç–∏ –≤ —Ç–æ–ø!\n\n`;

		message += `‚è∞ *–ù–∞—Å—Ç—É–ø–Ω–µ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è:* ${statsData.next_reward_time || '–∑–∞–≤—Ç—Ä–∞, —Ç–æ–º—É –≥—Ä–∞–π –∞–∫—Ç–∏–≤–Ω—ñ—à–µ!'}`;

		// –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
		await ctx.telegram.deleteMessage(ctx.chat.id, loadingMessage.message_id);
		await ctx.reply(message, { parse_mode: 'Markdown' });

	} catch (error) {
		console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /rewards:', error);

		let errorMessage = '‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω—å.\n\n';

		if (error.message.includes('404')) {
			errorMessage += '–°–∏—Å—Ç–µ–º–∞ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω—å —â–µ –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞ –∞–±–æ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö.';
		} else if (error.message.includes('500')) {
			errorMessage += '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.';
		} else {
			errorMessage += '–ú–æ–∂–ª–∏–≤–æ, —Å–µ—Ä–≤–µ—Ä —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π.';
		}

		errorMessage += '\n\nüí° –°–ø—Ä–æ–±—É–π –∫–æ–º–∞–Ω–¥—É /statistic –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —Å–≤–æ—î—ó –æ—Å–æ–±–∏—Å—Ç–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.';

		await ctx.reply(errorMessage);
	}
};

/**
 * –ö–æ–º–∞–Ω–¥–∞ /rewards24 - —Ç–æ–ø –≥—Ä–∞–≤—Ü—ñ–≤ —Ç—ñ–ª—å–∫–∏ –∑–∞ 24 –≥–æ–¥–∏–Ω–∏ (–¥–æ–¥–∞—Ç–∫–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞)
 */
const rewards24Command = async (ctx) => {
	try {
		const response = await fetch(`${process.env.API_URL}/rewards/top/24h`);

		if (!response.ok) {
			throw new Error(`API –ø–æ–º–∏–ª–∫–∞: ${response.status}`);
		}

		const data = await response.json();

		let message = `üî• *–¢–æ–ø –∞–∫—Ç–∏–≤–Ω–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 24 –≥–æ–¥–∏–Ω–∏*\n\n`;

		if (data.success && data.top_players.length > 0) {
			data.top_players.forEach((player, index) => {
				const emoji = index === 0 ? 'ü•á' : index === 1 ? 'ü•à' : index === 2 ? 'ü•â' :
					index === 3 ? 'üèÖ' : index === 4 ? 'üéñÔ∏è' : '‚≠ê';
				message += `${emoji} **${player.rank}.** \`${player.minecraft_nick}\`\n`;
				message += `   ‚è±Ô∏è ${player.active_hours_24h} –≥–æ–¥–∏–Ω (${player.active_minutes_24h} —Ö–≤)\n`;
				message += `   üí∞ –ó–∞—Ä–æ–±–∏–≤: ${player.coins_earned_24h} GFC\n\n`;
			});

			message += `üìä –í—Å—å–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤: ${data.total_players}\n`;
		} else {
			message += `üò¥ –ó–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 24 –≥–æ–¥–∏–Ω–∏ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤.\n`;
			message += `–ë—É–¥—å –ø–µ—Ä—à–∏–º - –∑–∞–π–¥–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —ñ –≥—Ä–∞–π –∞–∫—Ç–∏–≤–Ω–æ!\n`;
		}

		message += `\n‚è∞ –û–Ω–æ–≤–ª–µ–Ω–Ω—è —â–æ–¥–Ω—è –æ 15:00 –∑–∞ –∫–∏—ó–≤—Å—å–∫–∏–º —á–∞—Å–æ–º`;

		await ctx.reply(message, { parse_mode: 'Markdown' });

	} catch (error) {
		console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /rewards24:', error);
		await ctx.reply('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç–æ–ø –∑–∞ 24 –≥–æ–¥–∏–Ω–∏. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.');
	}
};

/**
 * –ö–æ–º–∞–Ω–¥–∞ /myrewards - –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω—å
 */
const myRewardsCommand = async (ctx) => {
	try {
		const telegramId = ctx.from.id;

		const response = await fetch(`${process.env.API_URL}/rewards/player/${telegramId}`);

		if (response.status === 404) {
			return ctx.reply(
				`‚ùå –£ —Ç–µ–±–µ —â–µ –Ω–µ–º–∞—î –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω—å –∑–∞ –∞–∫—Ç–∏–≤–Ω–∏–π —á–∞—Å.\n\n` +
				`üí° **–Ø–∫ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–∞–≥–æ—Ä–æ–¥–∏:**\n` +
				`‚Ä¢ –ì—Ä–∞–π –∞–∫—Ç–∏–≤–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ\n` +
				`‚Ä¢ AFK —á–∞—Å –Ω–µ –≤—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è\n` +
				`‚Ä¢ 1 —Ö–≤–∏–ª–∏–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—ó –≥—Ä–∏ = 1 GFC\n` +
				`‚Ä¢ –ù–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è —â–æ–¥–Ω—è –≤ —Ç–∞–∫–∏–π —Å–∞–º–∏–π —á–∞—Å\n\n` +
				`üéÆ –ü–æ—á–Ω–∏ –≥—Ä–∞—Ç–∏ —â–æ–± –∑'—è–≤–∏—Ç–∏—Å—è –≤ —Ç–æ–ø—ñ!`,
				{ parse_mode: 'Markdown' }
			);
		}

		if (!response.ok) {
			throw new Error(`API –ø–æ–º–∏–ª–∫–∞: ${response.status}`);
		}

		const data = await response.json();

		if (!data.has_rewards) {
			return ctx.reply(
				`‚ùå –£ —Ç–µ–±–µ —â–µ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è.\n\n` +
				`–ú–æ–∂–ª–∏–≤–æ, —Ç–∏ —â–µ –Ω–µ –≥—Ä–∞–≤ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ —á–∞—Å—É –∞–±–æ —Å–∏—Å—Ç–µ–º–∞ —â–µ –Ω–µ –æ–±—Ä–æ–±–∏–ª–∞ —Ç–≤–æ—ó –¥–∞–Ω—ñ.`
			);
		}

		const player = data.player_data;

		let message = `üéÆ *–¢–≤–æ—ó –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∑–∞ –∞–∫—Ç–∏–≤–Ω–∏–π —á–∞—Å*\n\n`;

		message += `üë§ **${player.minecraft_nick}**\n\n`;

		message += `üìä *–ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n`;
		message += `‚Ä¢ –ê–∫—Ç–∏–≤–Ω–∏—Ö –≥–æ–¥–∏–Ω: ${player.total_active_hours}\n`;
		message += `‚Ä¢ –û—Ç—Ä–∏–º–∞–Ω–æ –∫–æ—ó–Ω—ñ–≤: ${player.total_coins_awarded} GFC\n`;
		message += `‚Ä¢ –û—Å—Ç–∞–Ω–Ω—è –Ω–∞–≥–æ—Ä–æ–¥–∞: ${player.last_reward_date}\n\n`;

		message += `‚è±Ô∏è *–ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω:*\n`;
		message += `‚Ä¢ –ó–∞–≥–∞–ª–æ–º –∞–∫—Ç–∏–≤–Ω–∏—Ö –≥–æ–¥–∏–Ω: ${player.current_total_active_hours}\n`;
		message += `‚Ä¢ –ù–æ–≤–∏—Ö —Ö–≤–∏–ª–∏–Ω: ${player.new_active_minutes_since_last_reward}\n`;
		message += `‚Ä¢ –ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏—Ö –∫–æ—ó–Ω—ñ–≤: ${player.potential_new_coins} GFC\n\n`;

		message += `üí∞ *–ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å:* ${player.current_game_balance} GFC\n\n`;

		message += `‚è∞ **–ù–∞—Å—Ç—É–ø–Ω–∞ –Ω–∞–≥–æ—Ä–æ–¥–∞:** ${player.next_reward_date}`;

		await ctx.reply(message, { parse_mode: 'Markdown' });

	} catch (error) {
		console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /myrewards:', error);
		await ctx.reply('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω—å. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.');
	}
};

export {
	rewardsCommand,
	rewards24Command,
	myRewardsCommand
};