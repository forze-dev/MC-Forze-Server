const apiUrl = process.env.API_URL || 'http://localhost:4000';

const onlineCommand = async (ctx) => {
	try {
		console.log(`üîÑ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${ctx.from.id} –∑–∞–ø—É—Å—Ç–∏–≤ –∫–æ–º–∞–Ω–¥—É /online`);

		// –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
		const loadingMessage = await ctx.reply('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—é –æ–Ω–ª–∞–π–Ω –≥—Ä–∞–≤—Ü—ñ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ...');

		// –†–æ–±–∏–º–æ –∑–∞–ø–∏—Ç –¥–æ API –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –æ–Ω–ª–∞–π–Ω –≥—Ä–∞–≤—Ü—ñ–≤
		const response = await fetch(`${apiUrl}/rcon-server/players/online`, {
			method: 'GET',
			headers: {
				'Content-Type': 'application/json',
			}
		});

		// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç—É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
		const contentType = response.headers.get('content-type');
		let data;

		if (contentType && contentType.includes('application/json')) {
			data = await response.json();
			console.log(`üì® –û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ API: ${response.status} ${JSON.stringify(data)}`);
		} else {
			// –Ø–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–µ JSON
			const textResponse = await response.text();
			console.error(`‚ùå –°–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤ –Ω–µ JSON –≤—ñ–¥–ø–æ–≤—ñ–¥—å: ${textResponse}`);

			// –†–µ–¥–∞–≥—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
			await ctx.telegram.editMessageText(
				ctx.chat.id,
				loadingMessage.message_id,
				null,
				'‚ùå –ü–æ–º–∏–ª–∫–∞ –∑\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.'
			);
			return;
		}

		// –Ø–∫—â–æ –∑–∞–ø–∏—Ç —É—Å–ø—ñ—à–Ω–∏–π
		if (response.ok && data) {
			let message = 'üéÆ <b>–û–Ω–ª–∞–π–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ:</b>\n\n';

			if (data.count === 0 || !data.players || data.players.length === 0) {
				message += 'üò¥ –ù–∞ —Å–µ—Ä–≤–µ—Ä—ñ –∑–∞—Ä–∞–∑ –Ω–µ–º–∞—î –≥—Ä–∞–≤—Ü—ñ–≤ :(';
			} else {
				message += `üë• <b>–í—Å—å–æ–≥–æ –≥—Ä–∞–≤—Ü—ñ–≤: ${data.count}</b>\n\n`;

				// –î–æ–¥–∞—î–º–æ —Å–ø–∏—Å–æ–∫ –≥—Ä–∞–≤—Ü—ñ–≤
				data.players.forEach((player) => {
					message += `- <code>${player}</code>\n`;
				});

				// –î–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Å–µ—Ä–≤–µ—Ä
				message += `\nüòé <b>–ó–∞—Ö–æ–¥—å –¥–æ –Ω–∞—Å :)</b>\n—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö.—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö`;
			}

			// –†–µ–¥–∞–≥—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
			await ctx.telegram.editMessageText(
				ctx.chat.id,
				loadingMessage.message_id,
				null,
				message,
				{ parse_mode: 'HTML' }
			);

			console.log(`‚úÖ –ö–æ–º–∞–Ω–¥–∞ /online —É—Å–ø—ñ—à–Ω–æ –≤–∏–∫–æ–Ω–∞–Ω–∞ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${ctx.from.id}`);
		} else {
			// –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –≤—ñ–¥ API
			console.log(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –æ–Ω–ª–∞–π–Ω –≥—Ä–∞–≤—Ü—ñ–≤: ${response.status} ${JSON.stringify(data)}`);

			let errorMessage = '‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≥—Ä–∞–≤—Ü—ñ–≤';

			switch (response.status) {
				case 401:
					errorMessage = '‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ';
					break;
				case 500:
					errorMessage = '‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ú–æ–∂–ª–∏–≤–æ, —Å–µ—Ä–≤–µ—Ä Minecraft –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π';
					break;
				case 503:
					errorMessage = '‚ùå –°–µ—Ä–≤—ñ—Å —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ';
					break;
				default:
					if (data && data.message) {
						errorMessage = `‚ùå ${data.message}`;
					}
			}

			// –†–µ–¥–∞–≥—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ –ø–æ–º–∏–ª–∫–æ—é
			await ctx.telegram.editMessageText(
				ctx.chat.id,
				loadingMessage.message_id,
				null,
				errorMessage
			);
		}

	} catch (error) {
		console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ –∫–æ–º–∞–Ω–¥—ñ /online: ${error}`);

		try {
			// –°–ø—Ä–æ–±—É—î–º–æ –≤—ñ–¥—Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫—â–æ –≤–æ–Ω–æ —ñ—Å–Ω—É—î
			if (ctx.callbackQuery?.message?.message_id) {
				await ctx.telegram.editMessageText(
					ctx.chat.id,
					ctx.callbackQuery.message.message_id,
					null,
					'‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å–ø–∏—Å–∫—É –≥—Ä–∞–≤—Ü—ñ–≤. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.'
				);
			} else {
				await ctx.reply('‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å–ø–∏—Å–∫—É –≥—Ä–∞–≤—Ü—ñ–≤. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.');
			}
		} catch (editError) {
			console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${editError}`);
			// –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥—Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
			try {
				await ctx.reply('‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å–ø–∏—Å–∫—É –≥—Ä–∞–≤—Ü—ñ–≤. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.');
			} catch (replyError) {
				console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${replyError}`);
			}
		}
	}
};

export default onlineCommand;