const statisticCommand = async (ctx) => {
	try {
		// –û—Ç—Ä–∏–º—É—î–º–æ telegramId –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
		const telegramId = ctx.from.id;

		// –†–æ–±–∏–º–æ –∑–∞–ø–∏—Ç –¥–æ API –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é fetch
		const response = await fetch(`${process.env.API_URL}/players/telegram/${telegramId}`);

		// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
		if (response.status === 404) {
			return ctx.reply("‚ö†Ô∏è –¢–µ–±–µ —â–µ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π –∫–æ–º–∞–Ω–¥—É /register, —â–æ–± –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è.");
		}

		if (!response.ok) {
			throw new Error(`HTTP error! Status: ${response.status}`);
		}

		// –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ —É —Ñ–æ—Ä–º–∞—Ç—ñ JSON
		const stats = await response.json();

		// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Plan
		const planDataAvailable = stats.plan_data_available;

		// –§–æ—Ä–º–∞—Ç—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
		let message = `üìä *–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, ${stats.minecraft_nick}*\n\n`;

		// –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
		message += `üë§ *–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:*\n`;
		message += `‚Ä¢ –ù—ñ–∫–Ω–µ–π–º: \`${stats.minecraft_nick}\`\n`;
		message += `‚Ä¢ –î–∞—Ç–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: ${formatDate(stats.registered_at * 1000)}\n`; // * 1000 –±–æ –≤ –±–∞–∑—ñ unix timestamp
		message += `‚Ä¢ –Ü–≥—Ä–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: ${stats.game_balance || 0} GFC\n`;
		message += `‚Ä¢ –î–æ–Ω–∞—Ç–Ω–∏–π –±–∞–ª–∞–Ω—Å: ${stats.donate_balance || 0} DFC\n`;
		message += `‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–º—Å –∑–∞ 24 –≥–æ–¥: ${stats.messages_count || 0}\n`;
		message += `‚Ä¢ –ó–Ω–∏–∂–∫–∞: ${stats.discount_percent || 0}%\n`;
		message += `‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤: ${stats.referrals_count || 0}\n\n`;

		// –Ø–∫—â–æ –ø–ª–∞–Ω —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞, –¥–æ–¥–∞—î–º–æ —ó—ó
		if (planDataAvailable) {
			// –Ü–≥—Ä–æ–≤–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
			message += `‚è± *–Ü–≥—Ä–æ–≤–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å:*\n`;
			message += `‚Ä¢ –ó–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å –≥—Ä–∏: ${stats.total_playtime_hours || 0} –≥–æ–¥–∏–Ω\n`;
			message += `‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–µ—Å—ñ–π: ${stats.total_sessions || 0}\n`;
			message += `‚Ä¢ –°–µ—Ä–µ–¥–Ω—è —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å —Å–µ—Å—ñ—ó: ${stats.avg_session_duration_minutes || 0} —Ö–≤–∏–ª–∏–Ω\n`;

			// –°–≤—ñ—Ç–∏
			if (stats.world_times && stats.world_times.length > 0) {
				message += `‚Ä¢ –ù–∞–π–±—ñ–ª—å—à –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–∏–π —Å–≤—ñ—Ç: ${stats.most_played_world}\n\n`;

				message += `üåç *–ß–∞—Å —É —Å–≤—ñ—Ç–∞—Ö:*\n`;
				stats.world_times.forEach(world => {
					message += `‚Ä¢ ${world.world_name}: ${world.total_time_hours || 0} –≥–æ–¥–∏–Ω\n`;
				});
				message += `\n`;
			}

			// PvP —ñ PvE —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
			message += `‚öîÔ∏è *–ë–æ–π–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n`;
			message += `‚Ä¢ –í–±–∏—Ç–æ –º–æ–±—ñ–≤: ${stats.total_mob_kills || 0}\n`;
			message += `‚Ä¢ –í–±–∏—Ç–æ –≥—Ä–∞–≤—Ü—ñ–≤: ${stats.player_kills || 0}\n`;
			message += `‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–º–µ—Ä—Ç–µ–π: ${stats.total_deaths || 0}\n`;
			message += `‚Ä¢ K/D —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è: ${stats.kd_ratio || 0}\n\n`;

			// –ì—Ä—É–ø–∏ –¥–æ–∑–≤–æ–ª—ñ–≤
			if (stats.permission_groups && stats.permission_groups.length > 0) {
				message += `üîë *–ì—Ä—É–ø–∏ –¥–æ–∑–≤–æ–ª—ñ–≤:*\n`;
				message += stats.permission_groups.map(group => `‚Ä¢ ${group}`).join('\n');
				message += `\n\n`;
			}
		} else {
			message += `‚ö†Ô∏è –†–æ–∑—à–∏—Ä–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ú–æ–∂–ª–∏–≤–æ, —Ç–∏ —â–µ –Ω–µ –∑–∞—Ö–æ–¥–∏–≤(–ª–∞) –Ω–∞ —Å–µ—Ä–≤–µ—Ä.\n\n`;
		}

		message += `_–ó–∞—Ö–æ–¥—å –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä: —Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö_`;

		// –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
		ctx.replyWithMarkdown(message);

	} catch (error) {
		console.error('Error fetching player stats:', error);
		ctx.reply("‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –∑–≤–µ—Ä–Ω–∏—Å—å –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó.");
	}
};

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏
function formatDate(timestamp) {
	const date = new Date(timestamp);
	return date.toLocaleDateString('uk-UA', {
		day: 'numeric',
		month: 'long',
		year: 'numeric'
	});
}

export default statisticCommand;
