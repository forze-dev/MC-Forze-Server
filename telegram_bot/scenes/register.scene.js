import { Scenes, Markup } from 'telegraf';

const isValidUsername = (str) => /^[a-zA-Z0-9]+$/.test(str);
const apiUrl = process.env.API_URL || 'http://localhost:4000';

const registerScene = new Scenes.BaseScene('register');

registerScene.enter((ctx) => {
	console.log(`üîÑ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${ctx.from.id} —Ä–æ–∑–ø–æ—á–∞–≤ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é`);
	ctx.reply('‚úèÔ∏è –í–≤–µ–¥–∏ —Å–≤—ñ–π –Ω—ñ–∫–Ω–µ–π–º (—Ç—ñ–ª—å–∫–∏ –∞–Ω–≥–ª. –ª—ñ—Ç–µ—Ä–∏ —Ç–∞ —Ü–∏—Ñ—Ä–∏):');
	ctx.session.step = 'awaiting_nick';
});

// –Ñ–¥–∏–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –≤—Å—ñ—Ö —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
registerScene.on('text', async (ctx) => {
	const text = ctx.message.text;
	const { step } = ctx.session;

	console.log(`üì® –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ ${ctx.from.id} [–ï—Ç–∞–ø: ${step || '–Ω–µ–≤—ñ–¥–æ–º–∏–π'}]: ${text}`);

	// –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å –∫–æ–º–∞–Ω–¥—É, —Å–∫–∞—Å–æ–≤—É—î–º–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é
	if (text.startsWith('/')) {
		console.log(`‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${ctx.from.id} —Å–∫–∞—Å—É–≤–∞–≤ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é, –≤–≤—ñ–≤—à–∏ –∫–æ–º–∞–Ω–¥—É`);
		ctx.reply('‚ùå –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Å–∫–∞—Å–æ–≤–∞–Ω–∞. –¢–∏ –≤–≤—ñ–≤ –∫–æ–º–∞–Ω–¥—É!');
		ctx.session = {};  // –û—á–∏—Å—Ç–∏—Ç–∏ —Å–µ—Å—ñ—é
		ctx.scene.leave();  // –í–∏—Ö—ñ–¥ –∑—ñ —Å—Ü–µ–Ω–∏
		return;
	}

	// –Ø–∫—â–æ –Ω–∞ –µ—Ç–∞–ø—ñ –≤–≤–µ–¥–µ–Ω–Ω—è –Ω—ñ–∫–Ω–µ–π–º—É
	if (step === 'awaiting_nick') {
		if (!isValidUsername(text)) {
			console.log(`‚ö†Ô∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${ctx.from.id} –≤–≤—ñ–≤ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –Ω—ñ–∫–Ω–µ–π–º: ${text}`);
			return ctx.reply('‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –Ω—ñ–∫–Ω–µ–π–º. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ç—ñ–ª—å–∫–∏ –∞–Ω–≥–ª. –ª—ñ—Ç–µ—Ä–∏ —Ç–∞ —Ü–∏—Ñ—Ä–∏.');
		}
		ctx.session.minecraftNick = text;
		ctx.session.step = 'awaiting_password';
		console.log(`‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${ctx.from.id} –≤—Å—Ç–∞–Ω–æ–≤–∏–≤ –Ω—ñ–∫–Ω–µ–π–º: ${text}`);
		return ctx.reply('üîê –í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å (–∞–Ω–≥–ª. –ª—ñ—Ç–µ—Ä–∏ + —Ü–∏—Ñ—Ä–∏):');
	}

	// –Ø–∫—â–æ –Ω–∞ –µ—Ç–∞–ø—ñ –≤–≤–µ–¥–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é
	if (step === 'awaiting_password') {
		if (!isValidUsername(text)) {
			console.log(`‚ö†Ô∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${ctx.from.id} –≤–≤—ñ–≤ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –ø–∞—Ä–æ–ª—å`);
			return ctx.reply('‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –ø–∞—Ä–æ–ª—å. –¢—ñ–ª—å–∫–∏ –∞–Ω–≥–ª. –ª—ñ—Ç–µ—Ä–∏ —Ç–∞ —Ü–∏—Ñ—Ä–∏.');
		}
		ctx.session.password = text;
		ctx.session.telegramId = ctx.from.id;
		ctx.session.step = 'awaiting_referrer_decision';
		console.log(`‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${ctx.from.id} –≤—Å—Ç–∞–Ω–æ–≤–∏–≤ –ø–∞—Ä–æ–ª—å`);

		return ctx.reply('ü§ù –ë–∞–∂–∞—î—à –≤–∫–∞–∑–∞—Ç–∏, —Ö—Ç–æ —Ç–µ–±–µ –∑–∞–ø—Ä–æ—Å–∏–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä?', Markup.inlineKeyboard([
			Markup.button.callback('‚úÖ –¢–∞–∫', 'ref_yes'),
			Markup.button.callback('‚ùå –ù—ñ', 'ref_no'),
		]));
	}

	// –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞ –µ—Ç–∞–ø—ñ –≤–≤–µ–¥–µ–Ω–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞
	if (ctx.session.awaitingRefNick) {
		ctx.session.refTemp = text;
		ctx.session.awaitingRefNick = false;
		console.log(`‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${ctx.from.id} –≤–∫–∞–∑–∞–≤ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: ${text}`);

		await ctx.reply(`üîç –¢–∏ –≤–≤—ñ–≤: *${ctx.session.refTemp}*\n–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î—à?`, {
			parse_mode: 'Markdown',
			...Markup.inlineKeyboard([
				Markup.button.callback('‚úÖ –¢–∞–∫', 'confirm_ref'),
				Markup.button.callback('‚ùå –ù—ñ', 'cancel_ref')
			]),
		});
	}
});

registerScene.action('ref_yes', async (ctx) => {
	await ctx.answerCbQuery();
	ctx.session.awaitingRefNick = true;
	console.log(`üîÑ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${ctx.from.id} –≤–∏—Ä—ñ—à–∏–≤ –¥–æ–¥–∞—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞`);
	ctx.reply('‚úçÔ∏è –í–≤–µ–¥–∏ –Ω—ñ–∫ –≥—Ä–∞–≤—Ü—è, —è–∫–∏–π —Ç–µ–±–µ –∑–∞–ø—Ä–æ—Å–∏–≤:');
});

registerScene.action('ref_no', async (ctx) => {
	await ctx.answerCbQuery();
	ctx.session.referrerNick = null;
	console.log(`üîÑ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${ctx.from.id} –≤–∏—Ä—ñ—à–∏–≤ –Ω–µ –¥–æ–¥–∞–≤–∞—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞`);
	return finishRegistration(ctx);
});

registerScene.action('confirm_ref', async (ctx) => {
	await ctx.answerCbQuery();
	ctx.session.referrerNick = ctx.session.refTemp;
	console.log(`‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${ctx.from.id} –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏–≤ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: ${ctx.session.refTemp}`);
	return finishRegistration(ctx);
});

registerScene.action('cancel_ref', async (ctx) => {
	await ctx.answerCbQuery();
	ctx.session.refTemp = null;
	ctx.session.referrerNick = null;
	console.log(`‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${ctx.from.id} —Å–∫–∞—Å—É–≤–∞–≤ –≤–∏–±—ñ—Ä —Ä–µ—Ñ–µ—Ä–∞–ª–∞`);
	return finishRegistration(ctx);
});

async function finishRegistration(ctx) {
	const { telegramId, minecraftNick, password, referrerNick } = ctx.session;
	console.log(`üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –¥–ª—è ${telegramId} (${minecraftNick}), —Ä–µ—Ñ–µ—Ä–∞–ª: ${referrerNick || '–Ω–µ–º–∞—î'}`);

	try {
		const response = await fetch(`${apiUrl}/players/register`, {
			method: 'POST',
			headers: { 'Content-Type': 'application/json' },
			body: JSON.stringify({ telegramId, minecraftNick, password, referrerNick }),
		});

		const data = await response.json();
		console.log(`üì® –û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ API: ${response.status} ${JSON.stringify(data)}`);

		if (response.ok && data.message === 'User registered') {
			let message = `‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!\n\nüë§ –ù—ñ–∫: ${minecraftNick}\nüîê –ü–∞—Ä–æ–ª—å: ${password}\n\n–°–µ—Ä–≤–µ—Ä: —Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö\n–í–µ—Ä—Å—ñ—è: 1.16 - 1.21.4`

			if (referrerNick && !data.referrer_applied) {
				message += `\n\n–ì—Ä–∞–≤—Ü—è –∑ –Ω—ñ–∫–æ–º ${referrerNick}, —è–∫–æ–≥–æ —Ç–∏ –≤–∫–∞–∑–∞–≤ —è–∫ —Ç–æ–≥–æ, —Ö—Ç–æ —Ç–µ–±–µ –∑–∞–ø—Ä–æ—Å–∏–≤, –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –¢–∏ –∑–∞–≤–∂–¥–∏ –º–æ–∂–µ—à –¥–æ–¥–∞—Ç–∏ –π–æ–≥–æ –ø—ñ–∑–Ω—ñ—à–µ –∫–æ–º–∞–Ω–¥–æ—é: /reffer <–ù—ñ–∫>`
			}

			message += "\n\n–ü—Ä–∏—î–º–Ω–æ—ó –≥—Ä–∏)"

			ctx.reply(message);
			console.log(`‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${telegramId} —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π —è–∫ ${minecraftNick}`);
		} else if (response.status === 409) {
			ctx.reply('‚ö†Ô∏è –¢–∞–∫–∏–π –Ω—ñ–∫ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π.');
			console.log(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: –Ω—ñ–∫ ${minecraftNick} –≤–∂–µ —ñ—Å–Ω—É—î`);
		} else {
			ctx.reply('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó. –ù–∞–ø–∏—à–∏ –∞–¥–º—ñ–Ω—É @forzeoldgg');
			console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: ${JSON.stringify(data)}`);
		}
	} catch (err) {
		console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑'—î–¥–Ω–∞–Ω–Ω—ñ –∑ API: ${err}`);
		ctx.reply('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑`—î–¥–Ω–∞–Ω–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º. –ù–∞–ø–∏—à–∏ –∞–¥–º—ñ–Ω—É @forzeoldgg');
	}

	ctx.scene.leave();
	console.log(`üîÑ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${telegramId} –≤–∏–π—à–æ–≤ –∑—ñ —Å—Ü–µ–Ω–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó`);
}

export { registerScene };