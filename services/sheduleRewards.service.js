import cron from 'node-cron';
import { pool } from './db.service.js';
import { Telegraf } from 'telegraf';
import 'dotenv/config';

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –±–æ—Ç–∞ –ª–∏—à–µ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
const bot = new Telegraf(process.env.BOT_TOKEN);
const TARGET_CHAT_ID = process.env.TARGET_CHAT_ID;

// –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ –¥–ª—è —Ç–æ–ø-5 —É—á–∞—Å–Ω–∏–∫—ñ–≤ (–≤ —ñ–≥—Ä–æ–≤—ñ–π –≤–∞–ª—é—Ç—ñ)
const REWARDS = {
	1: 30,
	2: 25,
	3: 20,
	4: 15,
	5: 10
};

/**
 * –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–æ–ø N –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –¥–µ–Ω—å
 * @param {number} limit –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É —Ç–æ–ø—ñ
 * @returns {Promise<Array>} –ú–∞—Å–∏–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
 */
async function getTopActiveUsers(limit = 10) {
	const conn = await pool.getConnection();

	try {
		// –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–æ–ø-N –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
		const [topUsers] = await conn.query(`
            SELECT u.telegram_id, u.minecraft_nick, u.messages_count 
            FROM users u 
            WHERE u.messages_count > 0 
            ORDER BY u.messages_count DESC 
            LIMIT ?
        `, [limit]);

		return topUsers;
	} catch (error) {
		console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–ø –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:', error);
		return [];
	} finally {
		conn.release();
	}
}

/**
 * –ù–∞—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ —Ç–æ–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º
 * @param {Array} topUsers –ú–∞—Å–∏–≤ —Ç–æ–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
 * @returns {Promise<boolean>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü—ñ—ó
 */
async function awardTopUsers(topUsers) {
	if (!topUsers.length) return false;

	const conn = await pool.getConnection();
	const now = Math.floor(Date.now() / 1000);

	try {
		await conn.beginTransaction();

		// –ú–∞—Å–∏–≤ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –Ω–∞–≥–æ—Ä–æ–¥–∂–µ–Ω–Ω—è
		const awardResults = [];

		// –ù–∞—Ä–∞—Ö–æ–≤—É—î–º–æ –Ω–∞–≥–æ—Ä–æ–¥–∏ –¥–ª—è –ø–µ—Ä—à–∏—Ö 5 –º—ñ—Å—Ü—å (–∞–±–æ –º–µ–Ω—à–µ, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –º–µ–Ω—à–µ)
		for (let i = 0; i < Math.min(topUsers.length, 5); i++) {
			const position = i + 1;
			const user = topUsers[i];
			const reward = REWARDS[position];

			// –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
			await conn.query(`
                UPDATE users 
                SET game_balance = game_balance + ?, 
                    updated_at = ? 
                WHERE telegram_id = ?
            `, [reward, now, user.telegram_id]);

			awardResults.push({
				position,
				minecraft_nick: user.minecraft_nick,
				messages_count: user.messages_count,
				reward
			});
		}

		// –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –¥–ª—è –í–°–Ü–• –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
		await conn.query(`
            UPDATE users 
            SET messages_count = 0, 
                updated_at = ? 
            WHERE messages_count > 0
        `, [now]);

		await conn.commit();
		return awardResults;
	} catch (error) {
		await conn.rollback();
		console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥:', error);
		return false;
	} finally {
		conn.release();
	}
}

/**
 * –§–æ—Ä–º–∞—Ç—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ—é —Ç–∞ –Ω–∞–≥–æ—Ä–æ–¥–∞–º–∏
 * @param {Array} topUsers –ú–∞—Å–∏–≤ —Ç–æ–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
 * @param {Array} awardResults –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –Ω–∞–≥–æ—Ä–æ–¥
 * @returns {string} –í—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
 */
function formatSheduleReport(topUsers, awardResults) {
	// –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑–≤—ñ—Ç—É
	let message = `üìä *–ü—ñ–¥—Å—É–º–∫–∏ –ø–æ —á–∞—Ç—É –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 24 –≥–æ–¥–∏–Ω–∏ (—Ç–æ–ø ${topUsers.length})*\n\n`;

	// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
	topUsers.forEach((user, index) => {
		message += `${index + 1}. *${user.minecraft_nick}* ‚Äî ${user.messages_count} —Å–º—Å\n`;
	});

	// –°–µ–∫—Ü—ñ—è –Ω–∞–≥–æ—Ä–æ–¥, —è–∫—â–æ —î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
	if (awardResults && awardResults.length > 0) {
		message += `\nüèÜ *–ù–∞–≥–æ—Ä–æ–¥–∏:*\n`;
		awardResults.forEach(award => {
			message += `${award.position} –º—ñ—Å—Ü–µ (*${award.minecraft_nick}*): +${award.reward} GFC\n`;
		});

		message += `\nüí∞ –í—ñ—Ç–∞—î–º–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤! –ù–∞–≥–æ—Ä–æ–¥–∏ –≤–∂–µ –∑–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ –Ω–∞ –≤–∞—à—ñ —ñ–≥—Ä–æ–≤—ñ —Ä–∞—Ö—É–Ω–∫–∏!`;
		message += `\nüìù –õ—ñ—á–∏–ª—å–Ω–∏–∫–∏ —Å–º—Å —Å–∫–∏–Ω—É—Ç–æ. –ù–æ–≤–∏–π –¥–µ–Ω—å ‚Äî –Ω–æ–≤—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ!`;
	}

	return message;
}

/**
 * –ó–∞–ø—É—Å–∫–∞—î —â–æ–¥–µ–Ω–Ω–µ –ø—ñ–¥–≤–µ–¥–µ–Ω–Ω—è –ø—ñ–¥—Å—É–º–∫—ñ–≤ —Ç–∞ –Ω–∞–≥–æ—Ä–æ–¥–∂–µ–Ω–Ω—è
 */
async function runSheduleReport() {
	console.log('üîÑ –ó–∞–ø—É—Å–∫ —â–æ–¥–µ–Ω–Ω–æ–≥–æ –∑–≤—ñ—Ç—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ...');

	try {
		// 1. –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–ø-10 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
		const topUsers = await getTopActiveUsers(10);
		if (!topUsers.length) {
			console.log('üì® –ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 24 –≥–æ–¥–∏–Ω–∏');
			return;
		}

		console.log(`üì® –û—Ç—Ä–∏–º–∞–Ω–æ —Ç–æ–ø-${topUsers.length} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤`);

		// 2. –ù–∞—Ä–∞—Ö–æ–≤—É—î–º–æ –Ω–∞–≥–æ—Ä–æ–¥–∏
		const awardResults = await awardTopUsers(topUsers);

		// 3. –§–æ—Ä–º–∞—Ç—É—î–º–æ —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —á–∞—Ç
		const reportMessage = formatSheduleReport(topUsers, awardResults);

		// –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ —á–∞—Ç
		if (TARGET_CHAT_ID) {
			await bot.telegram.sendMessage(TARGET_CHAT_ID, reportMessage, { parse_mode: 'Markdown' });
			console.log('‚úÖ –ó–≤—ñ—Ç —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç');
		} else {
			console.error('‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ TARGET_CHAT_ID –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–≤—ñ—Ç—É');
		}

		// 4. –û—á–∏—â—É—î–º–æ –≤—Å—ñ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤ Redis
		await redisClient.del(CACHE_KEYS.USER_DAILY_MESSAGES);
		console.log('‚úÖ –õ—ñ—á–∏–ª—å–Ω–∏–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É—Å–ø—ñ—à–Ω–æ —Å–∫–∏–Ω—É—Ç—ñ');
	} catch (error) {
		console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –∑–≤—ñ—Ç—É:', error);
	}
}

/**
 * –ù–∞–ª–∞—à—Ç–æ–≤—É—î cron-–∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –∑–≤—ñ—Ç—É
 */
function setupSheduleReportSchedule() {
	// –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –∑–∞–ø—É—Å–∫–∞—î–º–æ –æ 12:00 –∑–∞ –∫–∏—ó–≤—Å—å–∫–∏–º —á–∞—Å–æ–º (UTC+2/UTC+3)
	// –û—Å–∫—ñ–ª—å–∫–∏ cron –ø—Ä–∞—Ü—é—î –∑–∞ UTC, –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—Ä–∞—Ö—É–≤–∞—Ç–∏ —Ä—ñ–∑–Ω–∏—Ü—é (9:00/10:00 UTC)
	// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –¥—ñ—î –ª—ñ—Ç–Ω—ñ–π —á–∞—Å
	const now = new Date();
	const isDST = now.getTimezoneOffset() < -120; // -180 —Ö–≤–∏–ª–∏–Ω –¥–ª—è UTC+3 (–ª—ñ—Ç–Ω—ñ–π —á–∞—Å)

	// –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –∑–∞–ø—É—Å–∫—É –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å—É
	const cronTime = isDST ? '0 9 * * *' : '0 10 * * *'; // 12:00 –∑–∞ –∫–∏—ó–≤—Å—å–∫–∏–º —á–∞—Å–æ–º

	console.log(`‚è±Ô∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –∑–≤—ñ—Ç—É –∑–∞ —Ä–æ–∑–∫–ª–∞–¥–æ–º: ${cronTime} (UTC)`);

	// –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ cron-–∑–∞–≤–¥–∞–Ω–Ω—è
	cron.schedule(cronTime, runSheduleReport, {
		timezone: 'Etc/UTC' // –Ø–≤–Ω–æ –≤–∫–∞–∑—É—î–º–æ UTC
	});

	console.log('‚úÖ –ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ —â–æ–¥–µ–Ω–Ω–∏—Ö –∑–≤—ñ—Ç—ñ–≤ —É—Å–ø—ñ—à–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ');
}

// –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É –∑–≤—ñ—Ç—É (–¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è)
async function runReportManually() {
	console.log('üîÑ –†—É—á–Ω–∏–π –∑–∞–ø—É—Å–∫ —â–æ–¥–µ–Ω–Ω–æ–≥–æ –∑–≤—ñ—Ç—É...');
	await runSheduleReport();
}

export {
	setupSheduleReportSchedule,
	runReportManually,
	runSheduleReport
};