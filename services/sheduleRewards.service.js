import cron from 'node-cron';
import { pool } from './db.service.js';
import { Telegraf } from 'telegraf';
import 'dotenv/config';
import {
	getTopMessageUsers,
	resetAllMessageCounts,
	resetMessagePeriod
} from './redis.service.js';

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –±–æ—Ç–∞ –ª–∏—à–µ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
const bot = new Telegraf(process.env.BOT_TOKEN);
const TARGET_CHAT_ID = process.env.TARGET_CHAT_ID;

// –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ –¥–ª—è —Ç–æ–ø-5 —É—á–∞—Å–Ω–∏–∫—ñ–≤ (–≤ —ñ–≥—Ä–æ–≤—ñ–π –≤–∞–ª—é—Ç—ñ)
const REWARDS = {
	1: 30, // –ü–µ—Ä—à–µ –º—ñ—Å—Ü–µ
	2: 25, // –î—Ä—É–≥–µ –º—ñ—Å—Ü–µ
	3: 20, // –¢—Ä–µ—Ç—î –º—ñ—Å—Ü–µ
	4: 15, // –ß–µ—Ç–≤–µ—Ä—Ç–µ –º—ñ—Å—Ü–µ
	5: 10  // –ü'—è—Ç–µ –º—ñ—Å—Ü–µ
};

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –¥—ñ—î –∑–∞—Ä–∞–∑ –ª—ñ—Ç–Ω—ñ–π —á–∞—Å –≤ –£–∫—Ä–∞—ó–Ω—ñ
 * @returns {boolean} true —è–∫—â–æ –∑–∞—Ä–∞–∑ –ª—ñ—Ç–Ω—ñ–π —á–∞—Å
 */
function isUkraineDST() {
	const now = new Date();
	// –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞—Ç—É –≤ –ö–∏—î–≤—ñ
	const kyivDate = new Date(now.toLocaleString('en-US', { timeZone: 'Europe/Kiev' }));
	// –û—Ç—Ä–∏–º—É—î–º–æ –∑–º—ñ—â–µ–Ω–Ω—è –≤—ñ–¥ UTC –≤ —Ö–≤–∏–ª–∏–Ω–∞—Ö
	const offsetInMinutes = -kyivDate.getTimezoneOffset();
	// –Ø–∫—â–æ –∑–º—ñ—â–µ–Ω–Ω—è –±—ñ–ª—å—à–µ 120 —Ö–≤–∏–ª–∏–Ω (2 –≥–æ–¥–∏–Ω–∏), —Ç–æ —Ü–µ –ª—ñ—Ç–Ω—ñ–π —á–∞—Å
	return offsetInMinutes > 120;
}

/**
 * –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø–æ —ó—Ö telegram_id
 * @param {string[]} telegramIds –ú–∞—Å–∏–≤ telegram_id
 * @returns {Promise<Array>} –ú–∞—Å–∏–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –¥–µ—Ç–∞–ª—å–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
 */
async function getUserDetailsByIds(telegramIds) {
	if (!telegramIds.length) return [];

	const conn = await pool.getConnection();

	try {
		// –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –¥–ª—è –∑–∞–ø–∏—Ç—É
		const placeholders = telegramIds.map(() => '?').join(',');

		// –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
		const [users] = await conn.query(`
            SELECT telegram_id, minecraft_nick, messages_count, game_balance 
            FROM users 
            WHERE telegram_id IN (${placeholders})
        `, telegramIds);

		return users;
	} catch (error) {
		console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:', error);
		return [];
	} finally {
		conn.release();
	}
}

/**
 * –ù–∞—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ —Ç–æ–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º
 * @param {Array} topUsers –ú–∞—Å–∏–≤ [telegramId, count]
 * @returns {Promise<Array|boolean>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü—ñ—ó
 */
async function awardTopUsers(topUsers) {
	if (!topUsers.length) return false;

	const conn = await pool.getConnection();
	const now = Math.floor(Date.now() / 1000);

	try {
		await conn.beginTransaction();

		// –û—Ç—Ä–∏–º—É—î–º–æ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
		const telegramIds = topUsers.map(item => item[0]);
		const userDetails = await getUserDetailsByIds(telegramIds);

		// –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞–ø—É –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø—É –¥–æ –¥–µ—Ç–∞–ª–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
		const userMap = new Map();
		userDetails.forEach(user => {
			userMap.set(user.telegram_id.toString(), user);
		});

		// –ú–∞—Å–∏–≤ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –Ω–∞–≥–æ—Ä–æ–¥–∂–µ–Ω–Ω—è
		const awardResults = [];

		// –ù–∞—Ä–∞—Ö–æ–≤—É—î–º–æ –Ω–∞–≥–æ—Ä–æ–¥–∏ –¥–ª—è –ø–µ—Ä—à–∏—Ö 5 –º—ñ—Å—Ü—å (–∞–±–æ –º–µ–Ω—à–µ, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –º–µ–Ω—à–µ)
		for (let i = 0; i < Math.min(topUsers.length, 5); i++) {
			const position = i + 1;
			const [telegramId, messageCount] = topUsers[i];
			const reward = REWARDS[position];

			// –û—Ç—Ä–∏–º—É—î–º–æ –¥–µ—Ç–∞–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
			const user = userMap.get(telegramId);
			if (!user) continue;

			// –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ message_count
			await conn.query(`
                UPDATE users 
                SET game_balance = game_balance + ?, 
                    messages_count = ?,
                    updated_at = ? 
                WHERE telegram_id = ?
            `, [reward, messageCount, now, telegramId]);

			awardResults.push({
				position,
				telegram_id: telegramId,
				minecraft_nick: user.minecraft_nick,
				messages_count: messageCount,
				reward
			});
		}

		// –î–ª—è –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø—Ä–æ—Å—Ç–æ –æ–Ω–æ–≤–ª—é—î–º–æ message_count
		// –û–±—Ä–æ–±–ª—è—î–º–æ —ñ–Ω—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –Ω–µ –æ—Ç—Ä–∏–º–∞–ª–∏ –Ω–∞–≥–æ—Ä–æ–¥–∏
		for (let i = 5; i < topUsers.length; i++) {
			const [telegramId, messageCount] = topUsers[i];
			const user = userMap.get(telegramId);
			if (!user) continue;

			await conn.query(`
                UPDATE users 
                SET messages_count = ?,
                    updated_at = ? 
                WHERE telegram_id = ?
            `, [messageCount, now, telegramId]);
		}

		await conn.commit();
		return awardResults;
	} catch (error) {
		await conn.rollback();
		console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥:', error);
		return false;
	} finally {
		conn.release();
	}
}

/**
 * –§–æ—Ä–º–∞—Ç—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ—é —Ç–∞ –Ω–∞–≥–æ—Ä–æ–¥–∞–º–∏
 * @param {Array} topUsers –ú–∞—Å–∏–≤ [telegramId, count]
 * @param {Array} userDetails –ú–∞—Å–∏–≤ –∑ –¥–µ—Ç–∞–ª—å–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
 * @param {Array} awardResults –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –Ω–∞–≥–æ—Ä–æ–¥
 * @returns {string} –í—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
 */
function formatScheduleReport(topUsers, userDetails, awardResults) {
	// –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞–ø—É –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø—É –¥–æ –¥–µ—Ç–∞–ª–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
	const userMap = new Map();
	userDetails.forEach(user => {
		userMap.set(user.telegram_id.toString(), user);
	});

	// –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑–≤—ñ—Ç—É
	let message = `üìä *–ü—ñ–¥—Å—É–º–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —á–∞—Ç—É –∑–∞ –ø–µ—Ä—ñ–æ–¥*\n\n`;

	// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (—Ç–æ–ø-10)
	message += `üèÜ *–¢–æ–ø ${topUsers.length} –ø–æ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å:*\n\n`;

	topUsers.forEach(([telegramId, count], index) => {
		const user = userMap.get(telegramId);
		if (user) {
			message += `${index + 1}. *${user.minecraft_nick}* ‚Äî ${count} —Å–º—Å\n`;
		}
	});

	// –°–µ–∫—Ü—ñ—è –Ω–∞–≥–æ—Ä–æ–¥, —è–∫—â–æ —î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
	if (awardResults && awardResults.length > 0) {
		message += `\nüí∞ *–ù–∞–≥–æ—Ä–æ–¥–∏ –∑–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å:*\n`;
		awardResults.forEach(award => {
			message += `${award.position} –º—ñ—Å—Ü–µ (*${award.minecraft_nick}*): +${award.reward} GFC\n`;
		});

		message += `\nüéÅ –í—ñ—Ç–∞—î–º–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤! –ù–∞–≥–æ—Ä–æ–¥–∏ –≤–∂–µ –∑–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ –Ω–∞ –≤–∞—à—ñ —ñ–≥—Ä–æ–≤—ñ —Ä–∞—Ö—É–Ω–∫–∏!`;
		message += `\n\n‚è∞ –ù–æ–≤–∏–π –ø–µ—Ä—ñ–æ–¥ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –ø–æ—á–∞–≤—Å—è! –ö–æ–∂–µ–Ω –≥—Ä–∞–≤–µ—Ü—å –º–æ–∂–µ –∑–∞—Ä–æ–±–∏—Ç–∏ –¥–æ 200 GFC –∑–∞ —Å–≤–æ—ó –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø—ñ–¥–≤–µ–¥–µ–Ω–Ω—è –ø—ñ–¥—Å—É–º–∫—ñ–≤.`;
	}

	return message;
}

/**
 * –ó–∞–ø—É—Å–∫–∞—î —â–æ–¥–µ–Ω–Ω–µ –ø—ñ–¥–≤–µ–¥–µ–Ω–Ω—è –ø—ñ–¥—Å—É–º–∫—ñ–≤ —Ç–∞ –Ω–∞–≥–æ—Ä–æ–¥–∂–µ–Ω–Ω—è
 */
async function runScheduleReport() {
	console.log('üîÑ –ó–∞–ø—É—Å–∫ —â–æ–¥–µ–Ω–Ω–æ–≥–æ –∑–≤—ñ—Ç—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ...');

	try {
		// 1. –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–ø-10 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
		const topUsers = await getTopMessageUsers(10);

		if (!topUsers.length) {
			console.log('üì® –ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ–π –ø–µ—Ä—ñ–æ–¥');

			// –°–∫–∏–¥–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
			await resetMessagePeriod();

			// –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
			if (TARGET_CHAT_ID) {
				await bot.telegram.sendMessage(
					TARGET_CHAT_ID,
					'üìä *–ó–≤—ñ—Ç –∑–∞ –ø–µ—Ä—ñ–æ–¥*\n\n–ù–∞ –∂–∞–ª—å, –Ω–µ –±—É–ª–æ –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É —á–∞—Ç—ñ –∑–∞ —Ü–µ–π –ø–µ—Ä—ñ–æ–¥.',
					{ parse_mode: 'Markdown' }
				);
			}

			return;
		}

		console.log(`üì® –û—Ç—Ä–∏–º–∞–Ω–æ —Ç–æ–ø-${topUsers.length} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å`);

		// 2. –û—Ç—Ä–∏–º—É—î–º–æ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
		const telegramIds = topUsers.map(item => item[0]);
		const userDetails = await getUserDetailsByIds(telegramIds);

		// 3. –ù–∞—Ä–∞—Ö–æ–≤—É—î–º–æ –Ω–∞–≥–æ—Ä–æ–¥–∏
		const awardResults = await awardTopUsers(topUsers);

		// 4. –§–æ—Ä–º–∞—Ç—É—î–º–æ —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —á–∞—Ç
		const reportMessage = formatScheduleReport(topUsers, userDetails, awardResults);

		// 5. –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏ —ñ –ø–µ—Ä—ñ–æ–¥ –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ü–∏–∫–ª—É
		await resetAllMessageCounts();
		await resetMessagePeriod();

		// 6. –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ —á–∞—Ç
		if (TARGET_CHAT_ID) {
			await bot.telegram.sendMessage(TARGET_CHAT_ID, reportMessage, { parse_mode: 'Markdown' });
			console.log('‚úÖ –ó–≤—ñ—Ç —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç');
		} else {
			console.error('‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ TARGET_CHAT_ID –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–≤—ñ—Ç—É');
		}
	} catch (error) {
		console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –∑–≤—ñ—Ç—É:', error);
	}
}

/**
 * –ù–∞–ª–∞—à—Ç–æ–≤—É—î cron-–∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –∑–≤—ñ—Ç—É –æ 13:00 –∑–∞ –ö–∏—ó–≤—Å—å–∫–∏–º —á–∞—Å–æ–º
 */
function setupScheduleReportSchedule() {
	// –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –∑–∞–ø—É—Å–∫—É - 13:00 –∑–∞ –∫–∏—ó–≤—Å—å–∫–∏–º —á–∞—Å–æ–º
	// –û—Å–∫—ñ–ª—å–∫–∏ cron –ø—Ä–∞—Ü—é—î –∑–∞ UTC, –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—Ä–∞—Ö—É–≤–∞—Ç–∏ —Ä—ñ–∑–Ω–∏—Ü—é –¥–ª—è –ö–∏—î–≤–∞ (+2/+3 UTC)
	// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –¥—ñ—î –ª—ñ—Ç–Ω—ñ–π —á–∞—Å
	const isDST = isUkraineDST();

	// –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –∑–∞–ø—É—Å–∫—É –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å—É
	// 10:00 UTC = 13:00 –ö–∏—ó–≤ –≤ –ª—ñ—Ç–Ω—ñ–π —á–∞—Å (UTC+3)
	// 11:00 UTC = 13:00 –ö–∏—ó–≤ –≤ –∑–∏–º–æ–≤–∏–π —á–∞—Å (UTC+2)
	const cronTime = isDST ? '0 10 * * *' : '0 11 * * *';

	console.log(`‚è±Ô∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –∑–≤—ñ—Ç—É –∑–∞ —Ä–æ–∑–∫–ª–∞–¥–æ–º: ${cronTime} (UTC) = 13:00 (–ö–∏—ó–≤)`);

	// –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ cron-–∑–∞–≤–¥–∞–Ω–Ω—è
	cron.schedule(cronTime, runScheduleReport, {
		timezone: 'Etc/UTC' // –Ø–≤–Ω–æ –≤–∫–∞–∑—É—î–º–æ UTC
	});

	console.log('‚úÖ –ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ —â–æ–¥–µ–Ω–Ω–∏—Ö –∑–≤—ñ—Ç—ñ–≤ —É—Å–ø—ñ—à–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ');
}

/**
 * –î–æ–¥–∞—Ç–∫–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É –∑–≤—ñ—Ç—É (–¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∞–±–æ –∫–µ—Ä—É–≤–∞–Ω–Ω—è)
 */
async function runReportManually() {
	console.log('üîÑ –†—É—á–Ω–∏–π –∑–∞–ø—É—Å–∫ —â–æ–¥–µ–Ω–Ω–æ–≥–æ –∑–≤—ñ—Ç—É...');
	await runScheduleReport();
}

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä—è—î –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ä–æ–∑–∫–ª–∞–¥—É —ñ –≤–∏–≤–æ–¥–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
 */
function checkScheduleSetup() {
	const isDST = isUkraineDST();
	const kyivTime = new Date().toLocaleString('uk-UA', { timeZone: 'Europe/Kiev' });
	const utcTime = new Date().toLocaleString('uk-UA', { timeZone: 'UTC' });

	console.log(`üïí –ü–æ—Ç–æ—á–Ω–∏–π —á–∞—Å –≤ –ö–∏—î–≤—ñ: ${kyivTime}`);
	console.log(`üïí –ü–æ—Ç–æ—á–Ω–∏–π —á–∞—Å UTC: ${utcTime}`);
	console.log(`üîç –õ—ñ—Ç–Ω—ñ–π —á–∞—Å –≤ –£–∫—Ä–∞—ó–Ω—ñ: ${isDST ? '–¢–∞–∫' : '–ù—ñ'}`);
	console.log(`‚è∞ –ó–≤—ñ—Ç–∏ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ –Ω–∞: 13:00 (–ö–∏—ó–≤) / ${isDST ? '10:00' : '11:00'} (UTC)`);
}

export {
	setupScheduleReportSchedule,
	runReportManually,
	runScheduleReport,
	checkScheduleSetup
};